<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[使用Hexo与GitHub搭建博客——（一）环境搭建]]></title>
      <url>/2017/08/30/%E4%BD%BF%E7%94%A8Hexo%E4%B8%8EGitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E2%80%94%E2%80%94%EF%BC%88%E4%B8%80%EF%BC%89%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<p>(该系列博文收录在本博客的“分类”—“博客”一栏中，如需查看该系列其他博文，请跳转至<a href="https://scottyyc.github.io/categories/%E5%8D%9A%E5%AE%A2/">“博客”</a>分类。）  </p>
<p>  &emsp;&emsp;  </p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><hr>
<p>本人所使用的操作系统：Windows 10 专业版，64 位操作系统，因此只能以Windows操作系统为例，请谅解。<br>在阅读完此篇文章后你应该做到：</p>
<ul>
<li><strong>下载并安装好所必需的软件</strong></li>
<li><strong>了解什么是命令行以及命令行基本操作</strong></li>
<li><strong>做好相关软件的环境配置</strong></li>
</ul>
<p>&emsp;&emsp;有朋友可能会说上面所提的这些东西以前从来没有接触过，完全看不懂。<br>&emsp;&emsp;没有关系，在接触Hexo之前我也对此一窍不通，但稍微钻研一会儿就发现，使用Hexo搭建博客真的可以说是“傻瓜式”的操作。请耐心往下看，然后跟着文章写作顺序一步步操作就行啦。</p>
<p>P.s.：收到同学的反馈说前一篇文章看不懂，其实这是正常的。因为前一篇文章中涉及一些专业词汇，并且加入了一些我自己对于用Hexo与GitHub搭建博客的想法，对于从未接触过这方面知识的朋友来说这些内容可能有些难以理解。因此，我想在这里强调总结一下，前一篇文章的重点在于讲述了本系列博文的主体脉络，以及选择Hexo+GitHub搭建方法的理由，与实际操作并无直接联系。所以请大家放心大胆地往下看吧。</p>
<p>&emsp;&emsp;[注]：如果在阅读过程中发现文章有任何错误或遗漏，欢迎在文章下的评论区指正与补充٩(๑❛ᴗ❛๑)۶。<br><br></p>
<h2 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h2><hr>
<ul>
<li><strong>Node.js（必需）</strong></li>
<li><strong>Git（必需）</strong></li>
<li><strong>Notepad++（必需）</strong></li>
<li><strong>Chrome谷歌浏览器（非必需）</strong></li>
</ul>
<p>&emsp;&emsp;有的朋友看到要安装这么多软件立马头就大了，立即推：放弃搭建博客（借用一下宇哥的梗hhh）。其实Notepad++也并非必需，但是为了接下来的工作中查阅修改配置文档更加方便，这里还是将其写为了必须安装。</p>
<h3 id="Node-js的下载与安装"><a href="#Node-js的下载与安装" class="headerlink" title="Node.js的下载与安装"></a>Node.js的下载与安装</h3><ol>
<li>第一步，进入Node.js的下载页面：<a href="https://nodejs.org/en/download/" title="Download|Node.js" target="_blank" rel="external">Download|Node.js</a></li>
<li>第二步，选择与你个人计算机系统相符的版本进行下载，如：我是Windows 10，64 位操作系统的即选择<code>Windows Installer(.msi) — 64-bit</code>，如图中红圈处所示。若是32位操作系统请选择32-bit。<a href="http://jingyan.baidu.com/article/09ea3edec9caa4c0aede392e.html" title="（怎么看自己电脑是32位还是64位？）" target="_blank" rel="external">（怎么看自己电脑是32位还是64位？）</a><br><br><img src="https://img3.doubanio.com/view/photo/l/public/p2497758714.webp" alt="Node.js下载页面" title="Node.js下载页面"></li>
<li>说明：（1）<code>Windows Installer</code> 指的是安装版的软件包，<code>Windows Binary</code> 指的是解压版的软件包，这里我们选择安装版的即可；（2）如果在下载过程中遇到下载速度极慢的问题，请在下图中的位置点击鼠标右键，选择复制链接地址，然后打开迅雷，新建任务，将复制的链接粘贴到其中即可。<br><br><img src="https://img1.doubanio.com/view/photo/l/public/p2497760307.webp" alt="Nodejs2" title="Nodejs下载速度过慢"></li>
<li>安装。这一步没什么好说的，双击打开下载好的安装包，一路<code>Next</code>点过去就行了。</li>
</ol>
<h3 id="Git的下载与安装"><a href="#Git的下载与安装" class="headerlink" title="Git的下载与安装"></a>Git的下载与安装</h3><ol>
<li><p>进入Git下载页面：<a href="https://git-scm.com/download/win" title="Git - Downloading Package" target="_blank" rel="external">Git - Downloading Package</a><br><br><img src="https://img1.doubanio.com/view/photo/l/public/p2497765687.webp" alt="Git下载页面" title="Git下载页面"></p>
</li>
<li><p>选择相应的版本进行下载。如果下载速度慢，在相应版本链接处点击鼠标右键，复制链接地址，进入迅雷新建任务进行下载。</p>
</li>
<li>双击打开安装包进行安装。安装完成后，在开始菜单里找到“Git”-&gt;“Git Bash”，蹦出一个类似命令行窗口的东西，就说明Git安装成功。</li>
<li><p>在打开的 Git Bash 界面中输入：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git config --global user.name &quot;Your Name&quot;</div><div class="line">git config --global user.email &quot;email@example.com&quot;</div></pre></td></tr></table></figure>
<p>其中的<code>Your Name</code>与<code>email@example.com</code>请分别替换成你想用的用户名与常用邮箱。设置完成后关闭窗口即可。<br><br><img src="https://img3.doubanio.com/view/photo/l/public/p2497766223.webp" alt="Git Bash界面" title="Git Bash界面"></p>
</li>
</ol>
<h3 id="Notepad-的下载与安装"><a href="#Notepad-的下载与安装" class="headerlink" title="Notepad++的下载与安装"></a>Notepad++的下载与安装</h3><ol>
<li>百度搜索Notepad++，直接选择搜索结果中百度软件中心的资源下载即可。或直接点击此链接：<a href="https://www.baidu.com/link?url=_C9n2XybYmib1dv6fcJVSK6VJwKrqKlth9Irz07WbQNDvTbsp5pw3ozISmijw69FG-sl5FF1kgDm9dshZD5TV_x-JO2AT9angdd4DnepY1i&amp;wd=&amp;eqid=ff498e1d0000d4f50000000459a6ccab" title="百度软件中心|Notepad++下载" target="_blank" rel="external">百度软件中心|Notepad++下载</a>（认为链接不安全的朋友请自行搜索）</li>
<li>双击打开安装包进行安装，需要注意的一点是安装过程中选择“语言”-&gt;“简体中文”。</li>
</ol>
<p><br></p>
<h2 id="命令行与软件环境配置"><a href="#命令行与软件环境配置" class="headerlink" title="命令行与软件环境配置"></a>命令行与软件环境配置</h2><hr>
<h3 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h3><p>&emsp;&emsp;同时按住键盘的<code>win</code>键与<code>R</code>键，打开“运行”命令框。然后输入<code>cmd</code>，点击“确定”打开命令行（命令提示符），也就是我们平时所说的“黑框框”。<br><br><img src="https://img3.doubanio.com/view/photo/l/public/p2497768220.webp" alt="win+R打开运行框" title="win+R打开运行框"><br><img src="https://img3.doubanio.com/view/photo/l/public/p2497768443.webp" alt="cmd命令提示符" title="cmd命令提示符"></p>
<h3 id="软件环境配置"><a href="#软件环境配置" class="headerlink" title="软件环境配置"></a>软件环境配置</h3><h4 id="Node-js环境变量设置"><a href="#Node-js环境变量设置" class="headerlink" title="Node.js环境变量设置"></a>Node.js环境变量设置</h4><p>&emsp;&emsp;<code>win + R</code>键并输入<code>cmd</code>，点击“确定”打开命令行工具，输入<code>npm</code>，并按“回车”键，如果命令行中显示类似如下结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">Usage: npm &lt;command&gt;</div><div class="line"></div><div class="line">where &lt;command&gt; is one of:</div><div class="line">    access, adduser, bin, bugs, c, cache, completion, config,</div><div class="line">    ddp, dedupe, deprecate, dist-tag, docs, edit, explore, get,</div><div class="line">    help, help-search, i, init, install, install-test, it, link,</div><div class="line">    list, ln, login, logout, ls, outdated, owner, pack, ping,</div><div class="line">    prefix, prune, publish, rb, rebuild, repo, restart, root,</div><div class="line">    run, run-script, s, se, search, set, shrinkwrap, star,</div><div class="line">    stars, start, stop, t, tag, team, test, tst, un, uninstall,</div><div class="line">    unpublish, unstar, up, update, v, version, view, whoami</div><div class="line"></div><div class="line">npm &lt;cmd&gt; -h     quick help on &lt;cmd&gt;</div><div class="line">npm -l           display full usage info</div><div class="line">npm help &lt;term&gt;  search for help on &lt;term&gt;</div><div class="line">npm help npm     involved overview</div><div class="line"></div><div class="line">Specify configs in the ini-formatted file:</div><div class="line">    C:\Users\lenovo\.npmrc</div><div class="line">or on the command line via: npm &lt;command&gt; --key value</div><div class="line">Config info can be viewed via: npm help config</div><div class="line"></div><div class="line">npm@3.10.10 C:\Program Files\nodejs\node_modules\npm</div></pre></td></tr></table></figure></p>
<p>说明Node.js环境变量已配置好，无需再调整，可跳过下面这一步。</p>
<p>如果命令行中显示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&apos;npm&apos; 不是内部或外部命令，也不是可运行的程序</div><div class="line">或批处理文件。</div></pre></td></tr></table></figure></p>
<p>请做如下操作：</p>
<ul>
<li>在你的计算机中找到Node.js的安装路径并复制，如下图：<br><br><img src="https://img1.doubanio.com/view/photo/l/public/p2497770439.webp" alt="Nodejs环境变量设置1" title="Nodejs环境变量设置1"></li>
<li>在桌面使用鼠标右键点击“我的电脑”-&gt;“属性”-&gt;“高级系统设置”：<br><br><img src="https://img1.doubanio.com/view/photo/l/public/p2497770887.webp" alt="Nodejs环境变量设置2" title="Nodejs环境变量设置2"></li>
<li>点击“环境变量”-&gt; 找到系统变量中的<code>Path</code>字段 -&gt; 点击“编辑”：<br><br><img src="https://img3.doubanio.com/view/photo/l/public/p2497771615.webp" alt="Nodejs环境变量设置3" title="Nodejs环境变量设置3"></li>
<li>将之前复制的Node.js的安装路径粘贴到“变量值”最后，点击“确定”：<br><br><img src="https://img3.doubanio.com/view/photo/l/public/p2497772103.webp" alt="Nodejs环境变量设置4" title="Nodejs环境变量设置4"></li>
</ul>
<p>至此Node.js环境变量配置完成，再次打开命令行工具，输入<code>npm</code>，可看到：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Usage: npm &lt;command&gt;</div><div class="line"></div><div class="line">where &lt;command&gt; is one of:</div><div class="line">.......（下方内容省略）</div></pre></td></tr></table></figure>
<h4 id="Node-js配置之npm淘宝镜像源设置"><a href="#Node-js配置之npm淘宝镜像源设置" class="headerlink" title="Node.js配置之npm淘宝镜像源设置"></a>Node.js配置之npm淘宝镜像源设置</h4><p>&emsp;&emsp;简单解释一下这步操作的意义：Node.js默认配置使用的是国外的源，在使用<code>npm</code>命令安装相关的库时速度会比较慢，配置国内镜像能够提升库的安装速度。（还是那句话，如果不理解，请跟着做就行了。）<br>操作步骤：<code>win + R</code>输入<code>cmd</code>，点击“确定”打开命令行工具 -&gt; 输入<code>npm config set registry https://registry.npm.taobao.org</code>，按回车即可：<br><br><img src="https://img3.doubanio.com/view/photo/l/public/p2497773786.webp" alt="npm淘宝镜像源设置" title="npm淘宝镜像源设置"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><hr>
<p>&emsp;&emsp;操作完以上的步骤，相关软件的安装和配置基本上就可以说是完成了，是不是很简单呢？（现场的同学们都说是，屏幕前的同学们，你们呢！）<br>&emsp;&emsp;下一篇文章将会介绍GitHub的相关配置、Hexo框架的安装以及Hexo的基本命令，经过下一篇的学习，朋友们就可以首次看到属于自己的博客了（个人博客一代目），敬请期待吧~</p>
]]></content>
      
        <categories>
            
            <category> 博客 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> NexT </tag>
            
            <tag> 博客 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[使用Hexo与GitHub搭建博客——（零）写在前面]]></title>
      <url>/2017/08/30/%E4%BD%BF%E7%94%A8Hexo%E4%B8%8EGitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E2%80%94%E2%80%94%EF%BC%88%E9%9B%B6%EF%BC%89%E8%AF%B4%E5%9C%A8%E5%89%8D%E9%9D%A2/</url>
      <content type="html"><![CDATA[<p>(该系列博文收录在本博客的“分类”—“博客”一栏中，如需查看该系列其他博文，请跳转至<a href="https://scottyyc.github.io/categories/%E5%8D%9A%E5%AE%A2/">“博客”</a>分类。）  </p>
<p>  &emsp;&emsp;  </p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言  "></a>前言  </h2><hr>
<p>&emsp;&emsp;“使用Hexo与GitHub搭建博客”是本博客推出的第一个博文系列，该系列主要用于记录本人搭建此博客的详细过程以及搭建过程中所踩过的坑。写这些文章的另一个目的在于帮助那些想搭建个人博客而又不知该从何下手的“小白”们创建属于自己的博客，希望这些文章能达到在读者读完后都感慨“原来搭建博客这么简单”的效果，同时，也希望我的一些经验能够帮助大家解决在用Hexo和GitHub搭建博客过程中遇到的一些问题。  </p>
<p>&emsp;&emsp;本系列文章将以我本人实际操作过程为例详细讲解博客搭建的各个步骤，大致包括：  </p>
<ul>
<li><strong>环境搭建</strong></li>
<li><strong>Hexo基本命令介绍与部署到GitHub</strong></li>
<li><strong>为博客更换NexT主题与界面美化</strong></li>
<li><strong>功能扩展</strong></li>
<li><strong>其他</strong>  </li>
</ul>
<p>&emsp;&emsp;耗时：我当时花了大概三四天的时间来完整地搭建起此博客，当然，都是用的碎片化的时间，而且当中也遇到了不少的坑，如果完全按步骤走、少踩坑的话实际耗时应该不会超过<strong>3</strong>小时。<br>&emsp;&emsp;建议：遇到问题<strong>请积极百度</strong>，互联网是你最好的帮手。我会尽量详细地记录本博客的搭建过程，但由于各方面原因无法保证能够解决你在搭建博客过程中遇到的所有问题。  </p>
<p>&emsp;&emsp;[注]：如果在阅读过程中发现文章有任何错误或遗漏，欢迎在文章下的评论区指正与补充٩(๑❛ᴗ❛๑)۶。<br><br></p>
<h2 id="为什么要写博客"><a href="#为什么要写博客" class="headerlink" title="为什么要写博客"></a>为什么要写博客</h2><hr>
<p>&emsp;&emsp;简单说说我个人的观点吧。<br>&emsp;&emsp;其实我在很早以前就有了写博客的想法。第一，博客不同于微博，QQ空间或微信朋友圈，给人的感觉就像这一方天地就是只属于我一人，我可以在这其中自由发挥；第二，用博客来记录学习和生活中的事情无疑是最好的选择，只要有网，就能随时随地查阅自己以往的文章；其次，写博客有助于训练写作思维和语言的组织能力，仔细想想，从高中毕业到如今已经有好几年没有好好写过文章了吧；最后一点，可以说是我写博客的真正初衷，当时想的是自学Python的Flask框架然后搭建一个博客记录学习生活，但最终由于时间不充足没法系统地学习Flask而泡汤了，直到遇到了Hexo，这也是我拖到如今才开始写博客的原因……<br>&emsp;&emsp;能够接触到Hexo首先要感谢一位知乎答主@崔斯特（假装能@），正是他的专栏文章<a href="https://zhuanlan.zhihu.com/p/25471760" target="_blank" rel="external">知乎@崔斯特-教你免费搭建个人博客，Hexo&amp;Github</a>成功地将我带入了Hexo搭建博客的坑，在这里给大家安利一下，对Python感兴趣的朋友不妨在知乎上关注一下他。然后要感谢的当然是“造轮子”的大神们了，不仅开发了Hexo框架让个人博客的搭建变得如此简单，还设计了辣么多的精美主题，膜拜。<br>&emsp;&emsp;这个话题就暂先说到这里，更多内容可以参考知乎上的相关回答<a href="https://www.zhihu.com/search?type=content&amp;q=%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%86%99%E5%8D%9A%E5%AE%A2" target="_blank" rel="external">知乎-为什么要写博客？</a><br><br></p>
<h2 id="选择Hexo-amp-GitHub搭建博客的理由"><a href="#选择Hexo-amp-GitHub搭建博客的理由" class="headerlink" title="选择Hexo&amp;GitHub搭建博客的理由"></a>选择Hexo&amp;GitHub搭建博客的理由</h2><hr>
<p>&emsp;&emsp;创建个人博客主流的方法有三种：  </p>
<ol>
<li><strong>购买域名，自己编程搭建</strong></li>
<li><strong>框架搭建，托管在GitHub，Coding等网站上</strong></li>
<li><strong>直接在博客园，CSDN等博客网站上创建个人博客</strong>  </li>
</ol>
<p>&emsp;&emsp;下面给出一个表格比较三种方式的优劣：  </p>
<table>
<thead>
<tr>
<th style="text-align:center">搭建方式</th>
<th style="text-align:center">难易程度</th>
<th style="text-align:center">自由程度</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">方式1</td>
<td style="text-align:center">难</td>
<td style="text-align:center">十分自由</td>
</tr>
<tr>
<td style="text-align:center">方式2</td>
<td style="text-align:center">易</td>
<td style="text-align:center">自由</td>
</tr>
<tr>
<td style="text-align:center">方式3</td>
<td style="text-align:center">/</td>
<td style="text-align:center">十分受限</td>
</tr>
</tbody>
</table>
<p>&emsp;&emsp;方式1要求有较强的编程能力，同时要求对web知识有较为深刻的理解，对于编程小白来说这种方式我们基本不予考虑。方式3受博客平台太多限制，博主在博客中能够加入自己喜欢的元素十分有限，这是该方式最大的不足。因此，相比二者而言，方式2是我们用来搭建个人博客的最优选择：使用框架搭建博客避免了编程的难题，托管在GitHub上解决了域名申请与管理的麻烦。<br>&emsp;&emsp;当然方式2也有它的不足之处：使用框架搭建虽然简单，但在自由程度上还是会受到一定的限制；另外，相比于方式3，显然方式3更容易形成社交圈子。除此二点之外，方式2由于是将博客托管在GitHub上的，会受到GitHub项目大小的限制（似乎是不能超过1GB）。（emmmm…出于这几点考虑在遥远的未来还是会选择使用Python Flask再开发一个个人博客吧，不过可能需要挺长的时间来完成这个工作。）<br>&emsp;&emsp;好啦！综合而言，使用方式2来搭建博客仍旧是最可行的方案了。接下来就让我们开始动手搭建属于自己的博客吧。</p>
]]></content>
      
        <categories>
            
            <category> 博客 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> NexT </tag>
            
            <tag> 博客 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2017/08/27/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        <categories>
            
            <category> Hello World </category>
            
        </categories>
        
        
    </entry>
    
  
  
</search>
